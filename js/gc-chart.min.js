"use strict";Date.prototype.simpleDate=function(){var a=this.getFullYear(),b=this.getMonth()+1,c=this.getDate();return a+"-"+(1===b.toString().length?"0"+b:b)+"-"+(1===c.toString().length?"0"+c:c)};const gcChartLocales={en:{options:{title:"Chart options",graph_type:{label:"Graph type",line:"Line",spline:"Spline",area:"Area"},hide_graphs:{label:"Hide Graphs",marker:"Marker"},marker:{label:"Marker",phenology:"Phenology",sn_marker:"SN Marker"},date_zoom:{from:"From",to:"To"}},statistics:{min:"Minimum",max:"Maximum",mean:"Mean",stddev:"Standard Deviation"},products:{sos:"Start of season",pos:"Peak of season",eos:"End of season",vitality:"Vitality",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"NDWI",savi:"SAVI",evi2:"EVI2",cire:"CIRE",npcri:"NPCRI"}},de:{options:{title:"Graphoptionen",graph_type:{label:"Graph Typ",line:"Gerade",spline:"Kurven",area:"Flächig"},hide_graphs:{label:"Ausblenden",marker:"Marker"},marker:{label:"Marker",phenology:"Phänologie",sn_marker:"SN Marker"},date_zoom:{from:"Von",to:"Bis"}},statistics:{min:"Minimum",max:"Maximum",mean:"Mittelwert",stddev:"Standardabweichung"},products:{sos:"Saisonbeginn",pos:"Saisonales Maximum",eos:"Saisonende",vitality:"Vitalität",ndvi:"NDVI",ndre1:"NDRE1",ndre2:"NDRE2",ndwi:"NDWI",savi:"SAVI",evi2:"EVI2",cire:"CIRE",npcri:"NPCRI"}}};Vue.component("gc-chart",{props:{gcWidgetId:{type:String,default:"chart1",required:!0},gcApikey:{type:String,default:"39553fb7-7f6f-4945-9b84-a4c8745bdbec"},gcHost:{type:String,default:"geocledian.com"},gcProxy:{type:String,default:void 0},gcApiBaseUrl:{type:String,default:"/agknow/api/v3"},gcApiSecure:{type:Boolean,default:!0},gcCurrentParcelId:{type:Number,default:-1},gcVisibleParcelIds:{type:String,default:""},gcAvailableProducts:{type:String,default:"vitality,ndvi,ndwi,ndre1,ndre2,savi,evi2,cire,npcri"},gcMode:{type:String,default:"one-index"},gcZoomStartdate:{type:String,default:""},gcZoomEnddate:{type:String,default:""},entity:{type:String,default:""},crop:{type:String,default:""},name:{type:String,default:""},gcInitialLoading:{type:Boolean,default:!0},gcParcels:{type:Array,default:function(){return[]}},gcSelectedProduct:{type:String,default:""},gcDatezoomLayout:{type:String,default:"vertical"},gcAvailableStats:{type:String,default:"mean,min,max,std.dev.,marker"},gcAvailableOptions:{type:String,default:"optionsTitle,graphType,hideGraphs,dateZoom,markers,legend"},gcOptionsCollapsed:{type:Boolean,default:!0},gcDataSource:{type:String,default:""},gcLanguage:{type:String,default:"en"},gcSelectedDate:{type:String,default:""}},template:'<div :id="gcWidgetId" class="gc-chart">          \n            <div>\n              <div class="gc-options-title is-size-6 is-orange" style="margin-bottom: 1.0rem; cursor: pointer;" \n                  v-on:click="toggleChartOptions" v-show="availableOptions.includes(\'optionsTitle\')">\n                  {{ $t(\'options.title\') }} \n                <i :class="[gcOptionsCollapsed ? \'\': \'is-active\', \'fas\', \'fa-angle-down\', \'fa-sm\']"></i>\n              </div>\n\n              <div :id="\'chartOptions_\'+gcWidgetId" :class="[gcOptionsCollapsed ? \'is-hidden\': \'\', \'chartOptions\', \'is-horizontal\', \'is-flex\']" \n                    style="padding-bottom: 1em; max-height: 6.6rem !important;">\n\n              <div class="field" v-show="availableOptions.includes(\'graphType\')">\n                <div class="field-label is-small"><label class="label has-text-left is-grey">{{ $t(\'options.graph_type.label\')}} </label></div>\n                <div class="field-body">\n                  <div class="select is-small">\n                  <select v-model="selectedGraphType">\n                    <option value="line">{{ $t(\'options.graph_type.line\')}}</option>\n                    <option value="spline">{{ $t(\'options.graph_type.spline\')}}</option>\n                    <option value="area-spline">{{ $t(\'options.graph_type.area\')}}</option>\n                  </select>\n                  </div>\n                </div>\n              </div>\n\n            <div class="field is-vertical" v-if="gcMode==\'one-index\'" v-show="availableOptions.includes(\'hideGraphs\')">\n              <div class="field-label is-small"><label class="label has-text-left is-grey">{{ $t(\'options.hide_graphs.label\')}}</label></div>\n              <div class="field-body" style="overflow-y: auto; height: 6.4rem;">\n                <div class="control">\n                  <div class="field is-horizontal">\n                    <div class="field-body">\n                      <div class="control">\n                        <label class="label is-grey is-small">\n                          <input class="is-small" :id="\'chkChartHideMean_\'+gcWidgetId" type="checkbox" value="mean" v-model="hiddenStats"> {{ $t(\'statistics.mean\')}} </label>\n                      </div>\n                    </div>\n                  </div>         \n                  <div class="field is-horizontal">\n                    <div class="field-body">\n                      <div class="control">\n                        <label class="label is-small is-grey">\n                          <input class="is-small" :id="\'chkChartHideMin_\'+gcWidgetId" type="checkbox" value="min" v-model="hiddenStats"> {{ $t(\'statistics.min\')}} </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class="field is-horizontal">\n                    <div class="field-body">\n                      <div class="control">\n                        <label class="label is-small is-grey">\n                          <input class="is-small" :id="\'chkChartHideMax_\'+gcWidgetId" type="checkbox" value="max" v-model="hiddenStats"> {{ $t(\'statistics.max\')}} </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div class="field is-horizontal">\n                      <div class="field-body">\n                        <div class="control">\n                          <label class="label is-small is-grey">\n                            <input class="is-small" :id="\'chkChartHideStdDev_\'+gcWidgetId" type="checkbox" value="std.dev." v-model="hiddenStats"> {{ $t(\'statistics.stddev\')}}</label>\n                        </div>\n                      </div>\n                  </div>\n                  <div class="field is-horizontal">\n                    <div class="field-body">\n                      <div class="control">\n                        <label class="label is-small is-grey">\n                          <input class="is-small" :id="\'chkChartHideMarker_\'+gcWidgetId" type="checkbox" value="marker" v-model="hiddenStats"> {{ $t(\'options.hide_graphs.marker\')}}</label>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                </div>\n            </div>\n            <div class="field" v-if="gcMode==\'one-index\'" v-show="availableOptions.includes(\'markers\')">\n              <div class="field-label is-small"><label class="label has-text-left is-grey">{{ $t(\'options.marker.label\')}}</label></div>\n              <div class="field-body">\n                <div class="select is-small">\n                  <select v-model="selectedMarkerType">\n                    <option value="phenology">{{ $t(\'options.marker.phenology\')}}</option>\n                    <option value="sn_marker">{{ $t(\'options.marker.sn_marker\')}}</option>\n                  </select>\n              </div>\n            </div>  \n            </div>\n\n            \x3c!-- date filter --\x3e\n            <div :class="dateZoomLayout[gcDatezoomLayout]"\n                  v-show="availableOptions.includes(\'dateZoom\')">\n              <div class="field">\n                <div class="field field-label is-small">\n                  <label class="label is-grey has-text-left" style="white-space: nowrap;">{{ $t(\'options.date_zoom.from\')}}</label>\n                </div>\n                <div class="control has-icons-left" style="max-width: 7.4rem;">\n                  <input :id="\'inpFilterDateFrom_\'+this.gcWidgetId" type="text" class="input is-small"\n                    placeholder="[YYYY-MM-DD]" v-model="chartFromDate">\n                  <span class="icon is-small is-left">\n                      <i class="fas fa-clock fa-lg"></i>\n                  </span>\n                </div>\n              </div>\n              <div class="field">\n                <div class="field field-label is-small">\n                  <label class="label is-grey has-text-left" style="white-space: nowrap;">{{ $t(\'options.date_zoom.to\')}}</label>\n                </div>\n                <div class="control has-icons-left" style="max-width: 7.4rem;">\n                  <input :id="\'inpFilterDateTo_\'+this.gcWidgetId" type="text" class="input is-small"\n                        placeholder="[YYYY-MM-DD]"  v-model="chartToDate">\n                  <span class="icon is-small is-left">\n                      <i class="fas fa-clock fa-lg"></i>\n                  </span>\n                </div>\n              </div>  \n            </div>\n          </div>\n          </div>\x3c!-- chart settings --\x3e\n\n          <div :id="\'chartNotice_\'+gcWidgetId" class="content is-hidden"></div>\n\n          <div :id="\'chartSpinner_\'+gcWidgetId" class="chartSpinner spinner is-hidden">\n            <div class="rect1"></div>\n            <div class="rect2"></div>\n            <div class="rect3"></div>\n            <div class="rect4"></div>\n            <div class="rect5"></div>\n          </div>\n\n          <div style="position: relative;">\n          <div :id="\'chart_\'+gcWidgetId" class="gc-chart"></div>\n\n          \x3c!-- product selector --\x3e\n          <div class="field product-selector is-hidden" style="position: absolute; right: 0rem; top: -1.2rem;">\n          \x3c!--div class="field-label"><label class="label has-text-left is-grey" style="margin-bottom: 4px;">Product</label></div--\x3e\n            <div class="field-body has-text-bold">\n              <div class="select is-normal" v-if="gcMode!=\'many-indices\'">\n              <select v-model="selectedProduct" title="Choose a product!">\n                <option v-for="p in availableProducts" v-bind:value="p">\n                  <span>{{ $t(\'products.\'+p)}}</span>\n                </option>\n                </select>\n              </div>\n            </div>\n          </div> \x3c!-- product selector --\x3e\n\n          </div>\n          \x3c!-- watermark --\x3e\n          <div class="is-inline-block is-pulled-right" style="opacity: 0.65; position: relative; bottom: 2.1rem; margin-right: 0.1rem;">\n            <span style="verticalalign: top; font-size: 0.7rem;">powered by</span><br>\n            <img src="img/logo.png" alt="geo|cledian" style="width: 100px; margin: -10px 0;">\n          </div>\n\n          </div>\n          \x3c!-- chart --\x3e',data:function(){return{chart:void 0,statistics:[],statisticsMany:[],internalSelectedProduct:"",parcels:[],currentRasterIndex:0,offset:0,pagingStep:1e3,total_parcel_count:250,chartLegendVisible:!0,similarity:{content_parcel:[],content_reference:[],similarity:{},summary:{},classification:{}},phenology:{phenology:{statistics:{},growth:{},markers:[]},summary:{}},currentGraphContent:"statistics",selectedGraphType:"line",selectedMarkerType:"phenology",hiddenStats:[],sn_markers:{},internalQuerydate:{},internalZoomStartdate:"",internalZoomEnddate:"",inpFilterDateFromPicker:void 0,inpFilterDateToPicker:void 0,dateZoomLayout:{vertical:"field is-vertical",horizontal:"field is-horizontal"},d3locales:{de:{decimal:",",thousands:".",grouping:[3],currency:["€",""],dateTime:"%a %b %e %X %Y",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],shortMonths:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"]},en:{decimal:",",thousands:".",grouping:[3],currency:["€",""],dateTime:"%a %b %e %X %Y",date:"%d.%m.%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["So","Mo","Di","Mi","Do","Fr","Sa"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}}}},computed:{apiKey:{get:function(){return this.gcApikey}},apiHost:{get:function(){return this.gcHost}},apiBaseUrl:{get:function(){return this.gcApiBaseUrl}},apiSecure:{get:function(){return this.gcApiSecure}},currentParcelID:{get:function(){return this.gcCurrentParcelId},set:function(newValue){this.$root.$emit("currentParcelIdChange",newValue)}},availableProducts:{get:function(){return this.gcAvailableProducts.split(",")}},selectedParcelIds:{get:function(){return"many-parcels"==this.gcMode?0==this.visibleParcelIds.length?!0===this.gcInitialLoading?this.parcels.map(p=>parseInt(p.parcel_id)).slice(0,10):[]:this.visibleParcelIds.split(",").length<=10?this.visibleParcelIds.split(",").map(p=>parseInt(p)):[]:0==this.visibleParcelIds.length?this.parcels.map(p=>parseInt(p.parcel_id)).slice(0,10):this.visibleParcelIds.split(",").map(p=>parseInt(p)).slice(0,10)}},dataSource:{get:function(){return this.gcDataSource},set:function(value){this.$root.$emit("dataSourceChange",value)}},chartWidth:function(){return parseInt(document.getElementById(this.gcWidgetId).offsetWidth)},chartHeight:function(){return parseInt(document.getElementById(this.gcWidgetId).style.height)},filterString:{get:function(){return this.gcFilterString},set:function(newValue){this.$root.$emit("filterChange",newValue)}},chartFromDate:{get:function(){if(this.gcZoomStartdate.length>0){if(this.isDateValid(this.gcZoomStartdate))return this.gcZoomStartdate}else if(this.isDateValid(this.internalZoomStartdate))return this.internalZoomStartdate},set:function(newValue){this.isDateValid(newValue)&&(this.$root.$emit("chartFromDateChange",newValue),this.internalZoomStartdate=newValue,this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate]))}},chartToDate:{get:function(){if(this.gcZoomStartdate.length>0){if(this.isDateValid(this.gcZoomEnddate))return this.gcZoomEnddate}else if(this.isDateValid(this.internalZoomEnddate))return this.internalZoomEnddate},set:function(newValue){this.isDateValid(newValue)&&(this.$root.$emit("chartToDateChange",newValue),this.internalZoomEnddate=newValue,this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate]))}},selectedProduct:{get:function(){return["sos","eos","pos"].includes(this.gcSelectedProduct)&&this.availableProducts.includes("ndvi")?"ndvi":this.gcSelectedProduct.length>0?this.gcSelectedProduct:this.internalSelectedProduct},set:function(newValue){this.internalSelectedProduct=newValue,this.$root.$emit("selectedProductChange",newValue)}},visibleParcelIds:{get:function(){return this.gcVisibleParcelIds}},availableStats:{get:function(){return this.gcAvailableStats.split(",")}},availableOptions:{get:function(){return this.gcAvailableOptions.split(",")}},currentLanguage:{get:function(){return this.gcLanguage}},selectedDate:{get:function(){return this.gcSelectedDate},set:function(value){console.debug("selectedDate - setter: "+value),this.$root.$emit("queryDateChange",value)}}},i18n:{locale:this.currentLanguage,messages:gcChartLocales},created(){console.debug("gc-chart - created()"),this.changeLanguage()},mounted:function(){let allStats;["mean","min","max","std.dev.","marker"].forEach(function(item){this.availableStats.includes(item)||(this.hiddenStats.push(item),"mean"===item&&(this.hiddenStats.push("means2"),this.hiddenStats.push("meanl8")))}.bind(this)),document.getElementById("chart_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden"),"many-indices"==this.gcMode&&(this.statisticsMany={vitality:[],ndvi:[],ndre1:[],ndre2:[],ndwi:[],savi:[],evi2:[],cire:[],npcri:[]}),"many-parcels"==this.gcMode&&(this.statisticsMany=[]),"one-index"!=this.gcMode&&"many-parcels"!=this.gcMode||(this.selectedProduct=this.availableProducts[0]),d3.timeFormatDefaultLocale(this.d3locales[this.currentLanguage]),this.chart=c3.generate({bindto:"#chart_"+this.gcWidgetId,data:{x:"x",columns:[]},grid:{x:{show:!0},y:{show:!0}},axis:{x:{type:"timeseries",tick:{fit:!1,format:"%e %b %y"}},y:{label:{text:"",position:"outer-top"}}}}),this.currentParcelID>0?this.getAllParcels(this.currentParcelID,this.offset,this.filterString):!0===this.gcInitialLoading&&this.getAllParcels(void 0,this.offset,this.filterString),this.initFromDatePicker(),this.initToDatePicker()},watch:{chartFromDate:function(newValue,oldValue){console.debug("event - chartFromDateChange"),this.isDateValid(newValue)&&new Date(newValue).getTime()<new Date(this.chartToDate).getTime()&&this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])},chartToDate:function(newValue,oldValue){console.debug("event - chartToDateChange"),this.isDateValid(newValue)&&new Date(newValue).getTime()>new Date(this.chartFromDate).getTime()&&this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])},selectedProduct:function(newValue,oldValue){if(newValue!=oldValue&&(console.debug("event - selectedProductChange"),this.parcels.length>0&&("one-index"==this.gcMode&&(this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.dataSource),"visible"!=newValue&&(document.getElementById("chkChartHideMarker_"+this.gcWidgetId).checked||(this.sn_markers={}),this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.selectedProduct))),"many-parcels"==this.gcMode)))for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i];"visible"!=newValue&&this.getIndexStats(parcel_id,this.dataSource,this.selectedProduct)}},availableProducts:function(newValue,oldValue){if(console.debug("event - availableProductsChange"),this.parcels.length>0){if("one-index"==this.gcMode&&this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.selectedProduct),"many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i];this.getParcelsProductData(parcel_id,this.selectedProduct,this.dataSource),"visible"!=newValue&&this.getIndexStats(this.selectedParcelIds[i],this.dataSource,this.selectedProduct)}if("many-indices"==this.gcMode)for(var i=0;i<this.availableProducts.length;i++)this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.availableProducts[i],this.dataSource),"visible"!=newValue&&this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.availableProducts[i])}},dataSource:function(newValue,oldValue){if(console.debug("event - dataSourceChange"),this.parcels.length>0){if("one-index"==this.gcMode&&(this.getParcelsProductData(this.getCurrentParcel().parcel_id,this.selectedProduct,this.dataSource),"visible"!=newValue&&(document.getElementById("chkChartHideMarker_"+this.gcWidgetId).checked||(this.sn_markers={}),this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.selectedProduct))),"many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i];"visible"!=newValue&&this.getIndexStats(parcel_id,this.dataSource,this.selectedProduct)}if("many-indices"==this.gcMode)for(var i=0;i<this.availableProducts.length;i++)"visible"!=newValue&&this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.availableProducts[i])}},currentParcelID:function(newValue,oldValue){console.debug("event - currentParcelIDChange"),"one-index"!=this.gcMode&&"many-indices"!=this.gcMode||this.handleCurrentParcelIDchange(newValue,oldValue)},visibleParcelIds:function(newValue,oldValue){if(console.debug("event - parcelIdsChange"),this.visibleParcelIds.length>0){if("many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i];parcel_id&&this.getIndexStats(parcel_id,this.dataSource,this.selectedProduct)}}else this.chart.unload()},currentRasterIndex:function(newValue,oldValue){newValue!=oldValue&&console.debug("event - currentRasterIndexChange")},statistics:function(newValue,oldValue){console.debug("event - statisticsChange"),this.createChartData(),this.isDateValid(this.chartFromDate)||(this.chartFromDate=newValue[0].date),this.isDateValid(this.chartToDate)||(this.chartToDate=newValue[newValue.length-1].date),this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])},statisticsMany:{handler:function(newValue,oldValue){console.debug("event - statisticsManyChange"),this.createChartData(),"many-indices"==this.gcMode&&newValue[this.availableProducts[0]][0]&&(this.isDateValid(this.chartFromDate)||(this.chartFromDate=newValue[this.availableProducts[0]][0].date),this.isDateValid(this.chartToDate)||(this.chartToDate=newValue[this.availableProducts[0]][newValue[this.availableProducts[0]].length-1].date)),this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])},deep:!0},hiddenStats:function(newValue,oldValue){newValue!=oldValue&&(this.chart.show(),this.hiddenStats.includes("mean")?(this.hiddenStats.push("means2"),this.hiddenStats.push("meanl8")):(this.hiddenStats=this.removeFromArray(this.hiddenStats,"means2"),this.hiddenStats=this.removeFromArray(this.hiddenStats,"meanl8")),this.chart.hide(this.hiddenStats))},selectedGraphType:function(newValue,oldValue){if(newValue!=oldValue){if(console.debug("event - selectedGraphTypeChange"),"one-index"==this.gcMode&&(this.chart.transform(newValue,"mean"),this.chart.transform(newValue,"min"),this.chart.transform(newValue,"max"),this.chart.transform(newValue,"parcel (mean)"),this.chart.transform(newValue,"reference (mean)")),"many-indices"==this.gcMode&&(this.chart.transform(newValue,"ndvi"),this.chart.transform(newValue,"ndwi"),this.chart.transform(newValue,"ndre1"),this.chart.transform(newValue,"ndre2"),this.chart.transform(newValue,"savi"),this.chart.transform(newValue,"evi"),this.chart.transform(newValue,"cire"),this.chart.transform(newValue,"npcri"),this.chart.transform(newValue,"vitality")),"many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++)this.chart.transform(newValue,this.selectedParcelIds[i]);try{this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])}catch(ex){}}},selectedMarkerType:function(newValue,oldValue){newValue!=oldValue&&(console.debug("event - selectedMarkerTypeChange"),this.selectedMarkerType,this.createChartData())},gcCurrentParcelId:function(newValue,oldValue){this.chart.focus(parseInt(newValue))},currentLanguage(newValue,oldValue){this.changeLanguage(),this.createChartData();try{this.isDateValid(this.chartFromDate)&&this.isDateValid(this.chartToDate)&&this.chart.zoom([this.chartFromDate,this.chartToDate])}catch(ex){}this.initFromDatePicker(),this.initToDatePicker()},gcSelectedDate(newValue,oldValue){if(console.debug("gcSelectedDateChange"),"one-index"==this.gcMode){let parcel_id=this.currentParcelID,p=this.getParcel(parcel_id)}if("many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i],p=this.statisticsMany.find(p=>p.parcel_id==parcel_id);const exactDate=this.getClosestDate(p[this.selectedProduct].map(d=>new Date(d.date)),new Date(newValue));let alreadySelected=!1;if(this.internalQuerydate.hasOwnProperty(parcel_id+"")&&(alreadySelected=this.internalQuerydate[parcel_id+""].simpleDate()===exactDate.simpleDate()),!0!==alreadySelected){let index=this.getClosestTimeSeriesIndex(p[this.selectedProduct],newValue);this.chart.unselect(parcel_id+""),this.chart.select(parcel_id+"",[index],!1)}else console.debug("parcel "+parcel_id+" already has date "+exactDate.simpleDate()+" selected. Checking next one..")}this.gcMode}},methods:{getApiUrl:function(endpoint){let protocol="http";return this.apiSecure&&(protocol+="s"),this.gcProxy?protocol+"://"+this.gcProxy+this.apiBaseUrl+endpoint:protocol+"://"+this.gcHost+this.apiBaseUrl+endpoint+"?key="+this.apiKey},getAllParcels:function(parcel_id,offset,filterString){let limit;const endpoint="/parcels";let params="&limit="+this.pagingStep;offset&&(params=params+"&offset="+offset),filterString&&(params+=filterString);let xmlHttp=new XMLHttpRequest,async=!0;console.debug("getAllParcels()"),console.debug("GET "+this.getApiUrl(endpoint)+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText);if("key is not authorized"==tmp.content)return document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="Sorry, the given API key is not authorized!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a> for a valid API key.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),void document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden");if("api key validity expired"==tmp.content)return document.getElementById("chartNotice_"+this.gcWidgetId).innerHTML="Sorry, the given API key's validity expired!<br> Please contact <a href='https://www.geocledian.com'>geo|cledian</a>for a valid API key.",document.getElementById("chartNotice_"+this.gcWidgetId).classList.remove("is-hidden"),void document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden");if(this.parcels=[],0==tmp.content.length)return;for(var i=0;i<tmp.content.length;i++){var item=tmp.content[i];this.parcels.push(item)}try{"one-index"==this.gcMode||"many-indices"==this.gcMode?parcel_id?(this.currentParcelID=parcel_id,this.handleCurrentParcelIDchange(-1,this.currentParcelID)):(console.debug("setting first parcel as current!"),this.currentParcelID=this.parcels[0].parcel_id,this.currentParcelID==this.parcels[0].parcel_id&&this.handleCurrentParcelIDchange(-1,this.parcels[0].parcel_id),console.debug("currentParcelID: "+this.currentParcelID)):this.handleCurrentParcelIDchange()}catch(err){console.debug("error selecting parcel_id"),console.debug(err)}}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},handleCurrentParcelIDchange:function(){if(console.debug("handleCurrentParcelIDchange"),this.currentParcelID>0&&("sn_marker"==this.selectedMarkerType||(this.sn_markers={}),"one-index"==this.gcMode&&this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.selectedProduct),"many-indices"==this.gcMode))for(var i=0;i<this.availableProducts.length;i++)this.getIndexStats(this.getCurrentParcel().parcel_id,this.dataSource,this.availableProducts[i]);if("many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i];parcel_id&&this.getIndexStats(parcel_id,this.dataSource,this.selectedProduct)}},getParcelsProductData:function(parcel_id,productName,source){document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden");const endpoint="/parcels/"+parcel_id+"/"+productName;let params="&source="+source+"&order=date",xmlHttp=new XMLHttpRequest,async=!0;console.debug("getParcelsProductData()"),console.debug("GET "+this.getApiUrl(endpoint)+params),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){let tmp=JSON.parse(xmlHttp.responseText),row=this.getCurrentParcel();tmp.content.length>0&&(Vue.set(row,"timeSeries",tmp.content),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"))}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},getCurrentParcel:function(){if(this.currentParcelID>0)return this.parcels.filter(p=>p.parcel_id+""==this.currentParcelID+"")[0]},getParcel:function(parcel_id){if(parcel_id>0)return this.parcels.filter(p=>p.parcel_id+""==parcel_id+"")[0]},getIndexStats:function(parcel_id,source,product){document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById(this.gcWidgetId).getElementsByClassName("product-selector")[0].classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.remove("is-hidden");let productName=product;"visible"==productName&&(productName="vitality");const endpoint="/parcels/"+parcel_id+"/"+productName;let params="&source="+source+"&order=date&statistics=true",xmlHttp=new XMLHttpRequest,async=!0;console.debug("getIndexStats()"),console.debug("GET "+this.getApiUrl(endpoint)+params),this.chart.unload(),xmlHttp.onreadystatechange=function(){if(4==xmlHttp.readyState){var tmp=JSON.parse(xmlHttp.responseText),row=this.getParcel(parcel_id);if(tmp.content.length>0){if(this.currentGraphContent="statistics","one-index"==this.gcMode&&(this.statistics=tmp.content,this.internalZoomStartdate=this.statistics[0].date,this.internalZoomEnddate=this.statistics[this.statistics.length-1].date),"many-parcels"==this.gcMode){let parcel=this.statisticsMany.find(p=>parseInt(p.parcel_id)==parseInt(parcel_id));if(parcel){let idx=this.statisticsMany.indexOf(parcel);parcel[productName]=tmp.content,this.statisticsMany.splice(idx,1,parcel)}else parcel={parcel_id:parseInt(parcel_id)},parcel[productName]=tmp.content,this.statisticsMany.push(parcel);let minDate=parcel[productName][0].date,maxDate=parcel[productName][tmp.content.length-1].date;""===this.internalZoomStartdate&&(this.internalZoomStartdate=minDate),""===this.internalZoomEnddate&&(this.internalZoomEnddate=maxDate),minDate<this.internalZoomStartdate&&(this.internalZoomStartdate=minDate),maxDate>this.internalZoomEnddate&&(this.internalZoomEnddate=maxDate)}"many-indices"==this.gcMode&&(this.statisticsMany[productName]=tmp.content,this.internalZoomStartdate=this.statisticsMany[productName][0].date,this.internalZoomEnddate=this.statisticsMany[productName][this.statisticsMany[productName].length-1].date)}}}.bind(this),xmlHttp.open("GET",this.getApiUrl(endpoint)+params,!0),xmlHttp.send()},createChartData:function(){console.debug("createChartData()"),console.debug("chart content: "+this.currentGraphContent),console.debug("chart mode: "+this.gcMode);let chartType=this.currentGraphContent,columns=[];if("statistics"==chartType){if("one-index"==this.gcMode&&this.statistics.length>0){let filteredStats=this.statistics.filter(s=>null!=s.statistics);columns[0]=["x"].concat(filteredStats.map(r=>r.date)),columns[1]=["mean"].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.mean,3))),columns[2]=["std.dev."].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.stddev,3))),columns[3]=["min"].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.min,3))),columns[4]=["max"].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.max,3))),columns[5]=["meanl8"].concat(filteredStats.map(function(r){return"landsat8"===r.source?this.formatDecimal(r.statistics.mean,3):null}.bind(this))),columns[6]=["means2"].concat(filteredStats.map(function(r){return"sentinel2"===r.source?this.formatDecimal(r.statistics.mean,3):null}.bind(this)))}if("many-indices"==this.gcMode){columns[0]=["x"].concat(this.statisticsMany[this.availableProducts[0]].map(r=>r.date)),this.availableProducts.includes("vitality")&&(columns[1]=["x3"].concat(this.statisticsMany.vitality.filter(s=>null!=s.statistics).map(r=>r.date)));for(var i=0;i<this.availableProducts.length;i++){let product=this.availableProducts[i],filteredStats=this.statisticsMany[product].filter(s=>null!=s.statistics);columns[columns.length]=[product].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.mean,3)))}}if("many-parcels"==this.gcMode&&this.statisticsMany.length>0){for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i],idx=this.selectedParcelIds.indexOf(parcel_id),parcel=this.statisticsMany.find(p=>p.parcel_id==parcel_id);if(parcel){let parcelStats=parcel[this.selectedProduct];if(parcelStats){let filteredStats=parcelStats.filter(s=>null!=s.statistics);columns[idx]=["x"+idx].concat(filteredStats.map(r=>r.date))}}}for(var i=0;i<this.selectedParcelIds.length;i++){let parcel_id=this.selectedParcelIds[i],parcel=this.statisticsMany.find(p=>p.parcel_id==parcel_id);if(parcel){let parcelStats=parcel[this.selectedProduct];if(parcelStats){let filteredStats=parcelStats.filter(s=>null!=s.statistics);columns[columns.length]=[parcel_id].concat(filteredStats.map(r=>this.formatDecimal(r.statistics.mean,3)))}}}}try{let markers;if("sn_marker"==this.selectedMarkerType&&this.sn_markers&&(markers=this.sn_markers.markers),"phenology"==this.selectedMarkerType&&this.phenology.phenology&&(markers=this.phenology.phenology.markers),markers&&(markers.sort((a,b)=>a.date>b.date?1:-1),markers.length>0)){let dates_markers=markers.map(r=>"None"!=r.date?r.date:NaN);columns[7]=["x2"].concat(dates_markers),columns[8]=["marker"].concat(markers.map(r=>this.formatDecimal(r.mean,3)))}}catch(err){console.log("error getting markers!"),console.error(err)}document.getElementById("chartNotice_"+this.gcWidgetId).classList.add("is-hidden"),"many-parcels"==this.gcMode?columns.length==2*this.selectedParcelIds.length&&(this.createChart(columns),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.remove("is-hidden")):(this.createChart(columns),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.remove("is-hidden"))}if("similarity"==chartType&&this.similarity.content_parcel.length>0){let columns=[];this.createChart(columns),document.getElementById("chartSpinner_"+this.gcWidgetId).classList.add("is-hidden"),document.getElementById("chart_"+this.gcWidgetId).classList.remove("is-hidden")}},createChart:function(data){console.debug("createChart()");let xs_options={},types_options={mean:this.selectedGraphType,"std.dev.":"bar",min:this.selectedGraphType,max:this.selectedGraphType,meanl8:"scatter",means2:"scatter","parcel (mean)":this.selectedGraphType,"reference (mean)":this.selectedGraphType,marker:"scatter"};if("one-index"==this.gcMode&&(xs_options={mean:"x",means2:"x",meanl8:"x",min:"x",max:"x","std.dev.":"x","parcel (mean)":"x2","reference (mean)":"x2",marker:"x2"}),"many-indices"==this.gcMode){for(var i=0;i<this.availableProducts.length;i++){const product=this.availableProducts[i];xs_options[product]="vitality"!=product?"x":"x3"}xs_options["parcel (mean)"]="x",xs_options["reference (mean)"]="x2"}if("many-parcels"==this.gcMode)for(var i=0;i<this.selectedParcelIds.length;i++){const parcel_id=this.selectedParcelIds[i],idx=this.selectedParcelIds.indexOf(parcel_id);xs_options[parcel_id]="x"+idx,types_options[parcel_id]=this.selectedGraphType}var axis_label;axis_label="one-index"==this.gcMode?"vitality"==this.selectedProduct||"variations"==this.selectedProduct||"visible"==this.selectedProduct?this.$t("products.ndvi"):this.$t("products."+this.selectedProduct):"Index ["+this.$t("statistics.mean")+"]",d3.timeFormatDefaultLocale(this.d3locales[this.currentLanguage]),this.chart=c3.generate({bindto:"#chart_"+this.gcWidgetId,data:{selection:{enabled:!0,multiple:!1,grouped:!1,isselectable:function(d){return"marker"!=d.id&&"reference (mean)"!=d.id&&"parcel (mean)"!=d.id}},xs:xs_options,columns:data,names:{mean:this.$t("statistics.mean"),min:this.$t("statistics.min"),max:this.$t("statistics.max"),"std.dev.":this.$t("statistics.stddev"),meanl8:"Landsat-8",means2:"Sentinel-2",sos:this.$t("products.sos"),pos:this.$t("products.pos"),eos:this.$t("products.eos"),vitality:this.$t("products.vitality"),ndvi:this.$t("products.ndvi"),ndre1:this.$t("products.ndre1"),ndre2:this.$t("products.ndre2"),ndwi:this.$t("products.ndwi"),savi:this.$t("products.savi"),evi2:this.$t("products.evi2"),cire:this.$t("products.cire"),npcri:this.$t("products.npcri")},hide:this.hiddenStats,type:"line",types:types_options,colors:{mean:"#EF7D00","std.dev.":" #d6d6d6",min:"#EF7D00",max:"#EF7D00",meanl8:"#0500ef",means2:"#00eaef","parcel (mean)":"#EF7D00","reference (mean)":"#1f77b4",marker:"grey"},color:function(color,d){if("marker"==d.id){let c;return"sn_marker"==this.selectedMarkerType&&(c=this.sn_markers.markers[d.index].status),"phenology"==this.selectedMarkerType&&(c=this.phenology.phenology.markers[d.index].status),c}return color},onselected:function(e,svgElement,b,c){console.debug("onselected()"),"statistics"==this.currentGraphContent&&e.x&&(this.internalQuerydate[e.id+""]=e.x,this.selectedDate=e.x.simpleDate())}.bind(this)},spline:{interpolation:{type:"monotone"}},legend:{hide:!this.availableOptions.includes("legend"),item:{onclick:function(id){"many-parcels"!=this.gcMode&&("mean"==id?(this.chart.toggle("mean"),this.chart.toggle("meanl8"),this.chart.toggle("means2")):this.chart.toggle(id))}.bind(this),onmouseover:function(id){"many-parcels"==this.gcMode&&(this.currentParcelID=id)}.bind(this)}},line:{connectNull:!0},point:{show:!0,focus:{expand:{r:6}},r:function(d){return"marker"==d.id?6:3}},transition:{duration:300},grid:{x:{show:!0},y:{show:!0}},axis:{x:{type:"timeseries",tick:{fit:!1,format:"%e %b %y"}},y:{label:{text:axis_label,position:"outer-top"},padding:{top:10,bottom:0}}},zoom:{enabled:!1,type:"drag"},tooltip:{grouped:!0,format:{value:function(value,ratio,id,index){if("meanl8"!=id&&"means2"!=id)return"statistics"!=this.currentGraphContent?value:""!=this.dataSource?value:"marker"==id?value:"one-index"==this.gcMode?value+" ("+this.statistics[index].source+")":"many-indices"==this.gcMode?value+" ("+this.statisticsMany[id][index].source+")":"many-parcels"==this.gcMode?value+" ("+this.statisticsMany.find(p=>p.parcel_id==id)[this.selectedProduct][index].source+")":void 0}.bind(this)},contents:function(d,defaultTitleFormat,defaultValueFormat,color){var $$=this,config=$$.config,titleFormat=config.tooltip_format_title||defaultTitleFormat,nameFormat=config.tooltip_format_name||function(name){return name},valueFormat=config.tooltip_format_value||defaultValueFormat,text,i,title,value,name,bgcolor;for(i=0;i<d.length;i++)if(d[i]&&(d[i].value||0===d[i].value)&&(text||(title=titleFormat?titleFormat(d[i].x):d[i].x,text="<table class='"+$$.CLASS.tooltip+"'>"+(title||0===title?"<tr><th colspan='2'>"+title+"</th></tr>":"")),"meanl8"!=d[i].id&&"means2"!=d[i].id)){if("marker"==d[i].id){let index=d[i].index,markers;"sn_marker"==this.selectedMarkerType&&(markers=this.sn_markers.markers),"phenology"==this.selectedMarkerType&&(markers=this.phenology.phenology.markers),name=nameFormat(markers[index].name),value=valueFormat(this.formatDecimal(d[i].value,3),d[i].ratio,d[i].id,d[i].index),bgcolor=markers[index].status}else name=nameFormat(d[i].name),value=valueFormat(d[i].value,d[i].ratio,d[i].id,d[i].index),bgcolor=$$.levelColor?$$.levelColor(d[i].value):color(d[i].id);text+="<tr class='"+$$.CLASS.tooltipName+"-"+d[i].id+"'>",text+="<td class='name'><span style='background-color:"+bgcolor+"'></span>"+name+"</td>",text+="<td class='value'>"+value+"</td>",text+="</tr>"}return text+"</table>"}}}),document.getElementById(this.gcWidgetId).getElementsByClassName("product-selector")[0].classList.remove("is-hidden")},toggleChartOptions:function(){this.gcOptionsCollapsed=!this.gcOptionsCollapsed},removeFromArray:function(arry,value){let index=arry.indexOf(value);return index>-1&&arry.splice(index,1),arry},formatDecimal:function(decimal,numberOfDecimals){var factor=100;return isNaN(parseFloat(decimal))?NaN:(1==numberOfDecimals&&(factor=10),2==numberOfDecimals&&(factor=100),3==numberOfDecimals&&(factor=1e3),4==numberOfDecimals&&(factor=1e4),5==numberOfDecimals&&(factor=1e5),Math.ceil(decimal*factor)/factor)},capitalize:function(s){return"string"!=typeof s?"":s.charAt(0).toUpperCase()+s.slice(1)},isDateValid:function(date_str){return!isNaN(new Date(date_str))},loadJSscript:function(url,callback){let script=document.createElement("script");script.src=url,script.async=!0,document.body.appendChild(script),script.onload=function(){callback()}},initFromDatePicker(){this.inpFilterDateFromPicker&&this.inpFilterDateFromPicker.destroy(),this.inpFilterDateFromPicker=new bulmaCalendar(document.getElementById("inpFilterDateFrom_"+this.gcWidgetId),{startDate:new Date(this.chartFromDate),dateFormat:"yyyy-mm-dd",lang:this.currentLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.chartFromDate=a.toISOString().split("T")[0]}.bind(this)})},initToDatePicker(){this.inpFilterDateToPicker&&this.inpFilterDateToPicker.destroy(),this.inpFilterDateToPicker=new bulmaCalendar(document.getElementById("inpFilterDateTo_"+this.gcWidgetId),{startDate:new Date(this.chartToDate),dateFormat:"yyyy-mm-dd",lang:this.currentLanguage,overlay:!1,closeOnOverlayClick:!0,closeOnSelect:!0,onSelect:function(e){var a=new Date(e.valueOf()+864e5);this.chartToDate=a.toISOString().split("T")[0]}.bind(this)})},changeLanguage(){this.$i18n.locale=this.currentLanguage},getClosestDate:function(arr,queryDate){let i;return console.debug("getClosestDate()"),arr.sort((function(a,b){var distancea,distanceb;return Math.abs(queryDate-a)-Math.abs(queryDate-b)}))[0]},getClosestTimeSeriesIndex:function(timeseries,queryDate){const exactDate=this.getClosestDate(timeseries.map(d=>new Date(d.date)),new Date(queryDate));return console.debug("closest date of given date "+queryDate+" is "+exactDate.simpleDate()),timeseries.map(d=>d.date).indexOf(exactDate.simpleDate())}}});